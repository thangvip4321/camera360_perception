<?xml version="1.0"?>

<launch>
	<arg name="camera_name" default="camera360" /> 

	<arg name="front_lens_name" default="front_lens"/>
	<arg name="rear_lens_name" default="rear_lens"/> 

	<!-- =========================================================================================================== -->
	<!-- Initialize nodelet -->
	<node pkg="nodelet" type="nodelet" name="$(arg camera_name)_nodelet_manager" args="manager"  respawn="true">
		<param name="num_worker_threads" value="10"/>
	</node>
	<!-- =========================================================================================================== -->


	<!-- =========================================================================================================== -->
	<!-- Open bag file -->
    <param name="use_sim_time" value="false"/>
    <param name="enable_statistics" value="false"/>

	<node pkg="rosbag" type="play" name="player"  args="--clock -l -r2 /home/bugcar/2022-04-22-17-33-49.bag" />
	<!-- =========================================================================================================== -->


	<!-- =========================================================================================================== -->
	<!-- Create tf -->
	<param name="robot_description" command="$(find xacro)/xacro $(find camera360_perception)/urdf/insta360.urdf.xacro"/>
	<node name="robot_state_publisher" type="robot_state_publisher" pkg="robot_state_publisher" />
	<node pkg="tf2_ros" type="buffer_server" name="tf2_buffer_server" />
	<!-- =========================================================================================================== -->


	<!-- =========================================================================================================== -->
	<!-- Publish the calibration -->
	<node name="$(arg front_lens_name)" ns="$(arg camera_name)" pkg="kalibr_extended_camera_info_publisher"
			type="camera_info_publisher_node" >
		<param name="camera_ns" value="$(arg front_lens_name)"/>
		<param name="frame_id" value="$(arg camera_name)_$(arg front_lens_name)_optical_frame"/>
		<rosparam command="load" file="$(find camera360_perception)/cfg/cameras_info/insta360_air/$(arg front_lens_name).yaml" subst_value="true" />
	</node>

	<node name="$(arg rear_lens_name)" ns="$(arg camera_name)" pkg="kalibr_extended_camera_info_publisher"
			type="camera_info_publisher_node">
		<param name="camera_ns" value="$(arg rear_lens_name)"/>
		<param name="frame_id" value="$(arg camera_name)_$(arg rear_lens_name)_optical_frame"/>
		<rosparam command="load" file="$(find camera360_perception)/cfg/cameras_info/insta360_air/$(arg rear_lens_name).yaml" subst_value="true" />
	</node>
	<!-- =========================================================================================================== -->

<!-- ======================================================== -->
	<rosparam command="load" file="$(find camera360_perception)/cfg/camera360_params_thang.yaml" subst_value="true"/>

	<node pkg="camera360_perception" name="inference_cam_front" type="inference.py" args="-v"  output="screen">
		<param name="orientation" value="front"/>
	</node>
	<node pkg="camera360_perception" name="inference_cam_left" type="inference.py" args="-v" >
		<param name="orientation" value="left"/>
	</node>
	<node pkg="camera360_perception" name="inference_cam_right" type="inference.py" args="-v"  >
		<param name="orientation" value="right"/>
	</node>
	<node pkg="camera360_perception" name="inference_cam_rear" type="inference.py" args="-v" >
		<param name="orientation" value="rear"/>
	</node>
	<!-- <node pkg="camera360_perception" name="" type="inference_multithread.py" output="screen" >
	</node> -->
	<!-- <node pkg="camera360_perception" name="" type="inference_multithread.py" output="screen" >
	</node> -->

</launch>
