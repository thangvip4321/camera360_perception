<?xml version="1.0"?>

<launch>
	<arg name="camera_name" default="camera360" /> 

	<arg name="front_lens_name" default="front_lens"/>
	<arg name="rear_lens_name" default="rear_lens"/> 

	<!-- =========================================================================================================== -->
	<!-- Initialize nodelet -->
	<node pkg="nodelet" type="nodelet" name="$(arg camera_name)_nodelet_manager" args="manager" output="screen" respawn="true">
		<param name="num_worker_threads" value="9"/>
	</node>
	<!-- =========================================================================================================== -->


	<!-- =========================================================================================================== -->
	<!-- Connect to 360 degree camera -->

	<!-- =========================================================================================================== -->


	<!-- =========================================================================================================== -->
	<!-- Create tf -->
	<param name="robot_description" command="$(find xacro)/xacro $(find camera360_perception)/urdf/insta360.urdf.xacro"/>
	<node name="robot_state_publisher" type="robot_state_publisher" pkg="robot_state_publisher" output="screen"/>
	<node pkg="tf2_ros" type="buffer_server" name="tf2_buffer_server" output="screen"/>
	<!-- =========================================================================================================== -->



	<!-- =========================================================================================================== -->
	<!-- Extract front image -->
	<include file="$(find camera360_perception)/launch/camera.launch" pass_all_args="true"/>
	<!-- =========================================================================================================== -->


	<!-- =========================================================================================================== -->
	<!-- Front camera projection -->

	<include file="$(find camera360_perception)/launch/projections.launch" pass_all_args="true"/>


	<!-- =========================================================================================================== -->


	<!-- =========================================================================================================== -->
	<!-- Rear camera projection -->



	<!-- Left view pinhole projection rear camera -->

<!-- ======================================================== -->


	<node pkg="camera360_perception" name="stitch_right" type="runtime_stitch.py" output="screen">
			<param name="camera_info_file" value="$(find camera360_perception)/cfg/cameras_info/insta360_air/camera_intrinsic_right.yaml"/>
			<param name="left_img_input" value="/$(arg camera_name)/$(arg front_lens_name)/right_projection/image_rect/compressed"/>
			<param name="right_img_input" value="/$(arg camera_name)/$(arg rear_lens_name)/left_projection/image_rect/compressed"/>
			<rosparam command="load" file="/$(find camera360_perception)/cfg/stitch/stitch_right.yaml"/>
			<param name="stitching_output" value="$(arg camera_name)/right" />
	</node>


	<node pkg="camera360_perception" name="stitch_left" type="runtime_stitch.py" output="screen">
			<param name="camera_info_file" value="$(find camera360_perception)/cfg/cameras_info/insta360_air/camera_intrinsic_left.yaml"/>
			<param name="right_img_input" value="/$(arg camera_name)/$(arg front_lens_name)/left_projection/image_rect/compressed"/>
			<param name="left_img_input" value="/$(arg camera_name)/$(arg rear_lens_name)/right_projection/image_rect/compressed"/>
			<rosparam command="load" file="/$(find camera360_perception)/cfg/stitch/stitch_left.yaml"/>
			<param name="stitching_output" value="$(arg camera_name)/left" />  
	</node>


	<!-- <node pkg="camera360_perception" name="calibrate_left_bev" type="calibration_roscamera.py" output="screen">
			<param name="stitched_input" value="/$(arg camera_name)/left"/>
			<param name="camera_info_file" value="$(find camera360_perception)/cfg/cameras_info/insta360_air/camera_intrinsic_left.yaml"/>
			<param name="output_calibration_file" value="$(find camera360_perception)/cfg/bev/bev_left.json"/>  
	</node> -->
    <!-- <node pkg="camera360_perception" name="calibrate_front_bev" type="calibration_roscamera.py" output="screen">
			<param name="stitched_input" value="/$(arg camera_name)/$(arg front_lens_name)/front_projection/image_rect/compressed"/>
			<param name="camera_info_file" value="$(find camera360_perception)/cfg/cameras_info/insta360_air/camera_intrinsic.yaml"/>
			<param name="output_calibration_file" value="$(find camera360_perception)/cfg/bev/bev_front.json"/>  
	</node> -->
    <node pkg="camera360_perception" name="calibrate_rear_bev" type="calibration_roscamera.py" output="screen">
			<param name="stitched_input" value="/$(arg camera_name)/$(arg rear_lens_name)/front_projection/image_rect/compressed"/>
			<param name="camera_info_file" value="$(find camera360_perception)/cfg/cameras_info/insta360_air/camera_intrinsic.yaml"/>
			<param name="output_calibration_file" value="$(find camera360_perception)/cfg/bev/bev_rear.json"/>  
	</node>
	<!-- <node pkg="camera360_perception" name="calibrate_right_bev" type="calibration_roscamera.py" output="screen">
			<param name="stitched_input" value="/$(arg camera_name)/right"/>
			<param name="camera_info_file" value="/$(find camera360_perception)/cfg/cameras_info/insta360_air/camera_intrinsic_right.yaml"/>
			<param name="output_calibration_file" value="$(find camera360_perception)/cfg/bev/bev_right.json"/>  
	</node> -->

</launch>